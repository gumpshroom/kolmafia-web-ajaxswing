#AjaxSwing properties file

# NOTE: See Customizing AjaxSwing at http://creamtec.com/ajaxswing/doc/customizing.html for more details


# ========================= ROUTER SERVLET PROPERTIES ===============================

# inProcess indicates whether the multiple instances of client application will be
# sharing the same JVM process (inProcess=true), or each client will get its own (false).
router.inProcess=true

# Since HttpServletRequest data is available from ClientAgent's requestData
# it sets how many data will be copied to serializable HttpServletRequestImpl object
# when each client will get its own JVM (router.inProcess=false)
# Possible values:
# "none" - do not copy anything for (default)
# "info" - only high level simple attributes
# "debug" - copy as much values as possible
# router.httpRequestDataLevel=none

# Set to false if you don't want the router to preload the application when the servlet
# is instantiated. Preloading eliminates the wait during the initialization of the
# application when the first client connects. It is only applicable for inProcess=true mode
router.preloadApp=false

# Used when preloadApp. If set to true, the router will wait during the initialization for the application's
# initialization to finish (main() function to return). If false, the preloading will be done asynchronously.
# Default is true
#router.preloadWaitForApp=false

# AjaxSwing is capable of doing session management even if the servlet engine doesn't support it.
# It is recommended to set a timeout to be greater then the default timeout of the servlet engine
# if it supports it. Do not trust the servlet engine to do it properly - some of them have bugs
# which will result in severe memory leaks
# Timeout is specified in seconds. Default value is 300 (5 minutes)
router.sessionTimeout=900

# Specifies in seconds how often the browser should ping the server to see if it needs to update the page with pushed server content
router.updateInterval=3

# If set to non-zero value, specifies how often the browser should perform a full (non-AJAX) page submit, refreshing the page
# This is recommended for long-running user session to prevent out-of-memory exceptions in the browser
# Value is set in minutes
router.autoSubmit=30

# If inProcess==false AjaxSwing will launch JVMs for client emulation. This setting
# tells it how many virtual clients can be emulated by one JVM. Default is 10
router.clientsPerJVM=1

# If inProcess==false this setting tells AjaxSwing how many client emulations can be done in a lifetime of a JVM
# before it should be shutdown and replaced with a new one. Default is 100
#router.retireJVMAfterClients=100

# Sets how long will the router wait for the newly started client process (JVM) to
# become available before timing out. Measured in seconds with the default value of 60
#router.agentWaitTimeout=120

# Tells AjaxSwing the port to run RMI Registry on. If the registry is already started by the servlet
# container, as is the case for Tomcat, AjaxSwing will is the existing registry
# This parameter can not be overriden by application property files
#router.registryPort=1100

# Defines the number of ports that AjaxSwing will try to create the RMI registry on.
# The actual port numbers will be between router.registryPort and router.registryPort + router.registryPortRange
# Value of 0 would instruct AjaxSwing to expect the registry to be running on the given port (it won't try to create it)
#router.registryPortRange=100

# For correct international charset support AjaxSwing always uses UTF8 character encoding
# The values are those allowed by the String class
#router.characterEncoding=ISO8859_1
router.characterEncoding=UTF8

# Specifies the name of the class that implements RouterRequestFilter interface.
# If set, AjaxSwing will load the class, create an instance and call the methods of the interface.
# NOTE: this property can only be specified in default.properties
#router.requestFilterClass=com.creamtec.ajaxswing.examples.RouterRequestFilterExample

# Specifies the name of the class that extends JVMFactory class.
# If set, AjaxSwing will load the class, create an instance and use it to launch standalone JVMs
# NOTE: this property can only be specified in default.properties
#router.jvmFactoryClass=com.creamtec.ajaxswing.core.JVMFactory

# Specifies the directory where the uploaded files should be saved
# Default is "temp" directory under AjaxSwing webapp
#router.uploadDir=/Temp

# Error dialog auto refresh time countdown in seconds, 5 is defaults, -1 is disabled, 0 is immidiate refresh on first time
# -1 is recommended for development, 0 for production
router.internal_error.refreshTime = -1


# ========================== CLIENT AGENT PROPERTIES ================================
# Specifies the class, that has the main function as an entry point for your application
agent.appStartClass=net.sourceforge.kolmafia.KoLmafia

# If your application receives command line parameters, put them here just as you would pass them to main()
agent.appParams=

# Set to true if you want AjaxSwing to allow application to change Look and Feel (not recommended)
agent.allowLFChange=false
# Sets default locale for AjaxSwing system messages
agent.defaultLocale=en

agent.productionMode=false

# if agent.useBrowserLocale == true AjaxSwing will set browser Locale otherwise will use agent.defaultLocale
agent.useBrowserLocale=false

# This setting used for maximize and undecorate main frame for looks good on full browser page.
# If you want keep the same view and behaviour that you have on desktop app, set this setting to false.
agent.undecorateFirstFrame=true

# Specifies a semicolon-separated list lf .jar or .zip files (NOT directories) where the application classes reside.
# If set, AjaxSwing class loader will create separate instaces of the classes for each user when
# JVM is shared. This provides cleaner separation of users and their static data in shared VM.
# IMPORTANT: make sure that the .jar and .zip files are NOT specified on the system CLASSPATH,
# otherwise all client agents will share the same instances of the class
#agent.classPath=lib1.jar;lib2.jar

# Specifies the maximum time in seconds AjaxSwing will wait for the application to process a request (operation)
#agent.requestTimeout=60

# Allows overriding the default logic of using AjaxSwing's fonts.properties to ensure the correct font sizes.
# By default is false on all platforms except for Linux, where it defaults to true
#agent.useAjaxSwingFontsConfigFile=true

# If uncommented, instructs AjaxSwing to load start class as an applet even if it has a main function
#agent.runAsApplet=true

# Specifies the name of the class that implements AgentRequestFilter interface.
# If set, AjaxSwing will load the class, create and instance and call the methods of the interface.
#agent.requestFilterClass=com.creamtec.ajaxswing.examples.AgentRequestFilterExample

# If set to true, AjaxSwing will not report an error when unsupported action is detected.
# This is useful to suppress errors in applications that use dynamic events
#agent.ignoreUnsupportedActions=true

# If set to true, AjaxSwing will not replace platform graphics environment with headless one
#agent.usePlatformGraphicsEnvironment=true

# If set to false, AjaxSwing use it's own FontConfiguration implementation instead of platform's native one
#agent.usePlatformFontConfiguration=false

# If set to non-0 value, specifies how long should AjaxSwing monitor background updates after each request
agent.monitorAsynchronousUpdates.duration=15
# Specifies how often the browser should ping the server for updates
agent.monitorAsynchronousUpdates.interval=2
# If set to true, causes the browser to update the page whenever RepaintManager detects a dirty component
#agent.monitorAsynchronousUpdates.updateOnRepaint=false
#Allow Selecting text in non-input fields
agent.allowTextSelection=false
# ============================= APPLET PROPERTIES ===================================
# Page title for applets. For applications the title of the current window is used
applet.title=Default title - change your applet properties file setting agent.appTitle

# Passed to applet as a return from AppletContext.getCodeBase()
#applet.codeBase=http://0.0.0.0:8040/codebase/myapplet.jar

# Passed to applet as a return from AppletContext.getDocumentBase()
#applet.documentBase=http://0.0.0.0:8040/html/myapplet.html

# Specify applet parameters in the form applet.param.<param_name>=<param_value>
#applet.param.serverPort=8000

# Specify applet width and height as you would do in <APPLET> tag of HTML page
#applet.width=600
#applet.height=400



# ========================= HTML GENERATION PROPERTIES ==============================
# URL where AjaxSwing will look for images, scripts and other documents. Override only if needed
#html.docsURL=http://0.0.0.0:8040/ajaxswing

# Can be set to specify to AjaxSwing the disk location of AjaxSwing documents directory
#html.docsRealPath=/opt/web/public_html/ajaxswing

# URL through which AjaxSwingRouter servlet can be accessed. By default the writer will
# try to determine the URL based on the host name and the port on which it is running.
# You can use this property to override the default URL composition
#html.submitURL=http://0.0.0.0:8040/MyApp

# Name of the theme that should be used when rendering the application HTML. The theme determines
# the colors, fonts and appearance of images for the application. The predefined themes are
# Light, Windows, Blue and Khaki (Khaki is only available with the purchase of a commercial license).
# You can create your own themes as well as customize the predefined ones.
html.theme=Light

# Name of the Freemarker HTML page template, expected to be in conf/templates/html directory
html.template.page=default-page/page.html

# Name of the Freemarker HTML page template, expected to be in conf/templates/html directory
html.template.initializing=default-page/initializing.html

html.dynamicEventsEnabled		= true

# Inflation allows you to increase the width and/or height of the generated window when it is
# mapped to HTML. The value is a percentage of incrase from the original value.
# Value of 0 means that the original size should be retained
html.inflate.width=0
html.inflate.height=0

# Uncomment to specify a URL of the page that will be displayed when the user has ended the session
#html.exitPageURL=http://www.mycompany.com/ThanksForUsing.html

# Uncomment to specify a URL of the page that will be displayed on error
#html.errorPageURL=/ajaxswing/Windows_docs/error.jsp

# Uncomment to specify a URL of the initialization JSP or servlet. Can be an abosoulte URL (http://myhost:port/...) or relative (/mycontext/initservlet)
#html.initializationPageURL=/examples/initializing.jsp

# If set to true, the generated names will be based on component text or label for debugging purposes.
# For instance, buttons names will be derived from the button text.
# This property can only be set in default.properties
#html.humanComponentNames=true

# If specified, the title is used for the generated HTML page instead of the Frame/Dialog title
#html.pageTitle=My Application Title

# ============================= MISC PROPERTIES ===================================

# Can be used to automatically refresh the page after a specified period of time in seconds
#window.*.autoRefresh=60

# Can be used to automatically submit the page after a specified period of time in seconds
#window.*.autoSubmit=300

# Keeps server session alive by pinging the server as long as the browser window is open
window.*.session.keepAlive=true
# Keep alive ping interval in seconds
#window.*.session.keepAliveInterval = 60

# Displays a notification in the browser allowing the user to prevent the session from expiring
#window.*.session.notifyBeforeExpiration=true
window.*.session.notifyBeforeExpirationMessage=Your session is about to time out. Press OK to prevent it from expiring

# Controls if the JFileChooser of OPEN_DIALOG type will browse
# the client disk (the machine that is running web browser) or server disk (the machine that is running AjaxSwing).
#window.<window_reference>.browseClient
window.*.snapshotRenderer.backgroundColor=EEECE9

# This setting prevent autocomplete from browser for password fields
browser.enableAutoComplete=true

# =================================== RENDERERS ==============================================
document.renderer							= com.creamtec.ajaxswing.rendering.html.positioned.AjaxPageRenderer

renderer.java.awt.Component  				= com.creamtec.ajaxswing.v4.render.DefaultComponentProcessor
updater.java.awt.Component  				= com.creamtec.ajaxswing.v4.render.DefaultComponentProcessor
renderer.javax.swing.JFileChooser 			= com.creamtec.ajaxswing.v4.render.DefaultJFileChooserProcessor
updater.javax.swing.JFileChooser 			= com.creamtec.ajaxswing.v4.render.DefaultJFileChooserProcessor
renderer.org.jfree.chart.ChartPanel			= com.creamtec.ajaxswing.v4.render.SnapshotRenderer
renderer.net.sf.jasperreports.view.JRViewer$PageRenderer =  com.creamtec.ajaxswing.v4.render.SnapshotRenderer

#this property enables mouse enter events handling for JMenuItems and is false by default
enable.jmenuitem.mouseenter.events=false
